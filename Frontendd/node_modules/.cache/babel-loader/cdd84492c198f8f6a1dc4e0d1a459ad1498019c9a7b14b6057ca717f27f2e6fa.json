{"ast":null,"code":"var _jsxFileName = \"/home/anisha7/Documents/coding/webdev/projects/Jobflow/Frontendd/src/components/BoardDetails.jsx\",\n  _s = $RefreshSig$();\n//the get is done already but here we display on screen \nimport { useBoardsContext } from '../hooks/useBoardsContext';\nimport PropTypes from 'prop-types';\nimport { useAuthContext } from '../hooks/useAuthContext';\n// date fns\nimport formatDistanceToNow from 'date-fns/formatDistanceToNow';\n\n//prop is the board object \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BoardDetails = ({\n  board\n}) => {\n  _s();\n  //Added this\n  const {\n    dispatch\n  } = useBoardsContext();\n  const {\n    user\n  } = useAuthContext();\n  const handleClick = async () => {\n    if (!user) {\n      return;\n    }\n    const response = await fetch('/api/JobAppSteps/' + board._id, {\n      method: 'DELETE',\n      headers: {\n        'Authorization': `Bearer ${user.token}`\n      }\n    });\n    const json = await response.json();\n    if (response.ok) {\n      dispatch({\n        type: 'DELETE_BOARD',\n        payload: json\n      });\n    }\n  };\n\n  //till here entire thing new and also the button\n  return (\n    /*#__PURE__*/\n    // what we want to display on screen for each board is the title and the number of jobs applied to and the number of jobs interested in and the date it was created at and a delete button. \n    _jsxDEV(\"div\", {\n      className: \"workout-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Dashboard Title:\", board.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Interested Jobs: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 10\n        }, this), board.interestedjobs]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Applied Jobs: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 10\n        }, this), board.applied]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: formatDistanceToNow(new Date(board.createdAt), {\n          addSuffix: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"material-symbols-outlined\",\n        onClick: handleClick,\n        children: \"delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(BoardDetails, \"ZIAOBK1qCEy/xRiTxRX1mU8kS34=\", false, function () {\n  return [useBoardsContext, useAuthContext];\n});\n_c = BoardDetails;\nBoardDetails.propTypes = {\n  board: PropTypes.object.isRequired\n};\nexport default BoardDetails;\nvar _c;\n$RefreshReg$(_c, \"BoardDetails\");","map":{"version":3,"names":["useBoardsContext","PropTypes","useAuthContext","formatDistanceToNow","jsxDEV","_jsxDEV","BoardDetails","board","_s","dispatch","user","handleClick","response","fetch","_id","method","headers","token","json","ok","type","payload","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","interestedjobs","applied","Date","createdAt","addSuffix","onClick","_c","propTypes","object","isRequired","$RefreshReg$"],"sources":["/home/anisha7/Documents/coding/webdev/projects/Jobflow/Frontendd/src/components/BoardDetails.jsx"],"sourcesContent":["//the get is done already but here we display on screen \r\nimport { useBoardsContext } from '../hooks/useBoardsContext'\r\nimport PropTypes from 'prop-types';\r\nimport { useAuthContext } from '../hooks/useAuthContext'\r\n// date fns\r\nimport formatDistanceToNow from 'date-fns/formatDistanceToNow'\r\n\r\n//prop is the board object \r\nconst BoardDetails = ({ board }) => {\r\n\r\n  //Added this\r\n   const { dispatch } = useBoardsContext()\r\n   const { user } = useAuthContext()\r\n\r\n   const handleClick = async () => {\r\n       if (!user) {\r\n      return\r\n    }\r\n\r\n    const response = await fetch('/api/JobAppSteps/' + board._id, {\r\n      method: 'DELETE',\r\n       headers: {\r\n        'Authorization': `Bearer ${user.token}`\r\n      }\r\n    })\r\n    const json = await response.json()\r\n\r\n    if (response.ok) {\r\n    \r\n      dispatch({type: 'DELETE_BOARD', payload: json})\r\n    }\r\n  }\r\n\r\n\r\n  //till here entire thing new and also the button\r\n  return (\r\n    // what we want to display on screen for each board is the title and the number of jobs applied to and the number of jobs interested in and the date it was created at and a delete button. \r\n   \r\n    <div className=\"workout-details\">\r\n      <h4>Dashboard Title:{board.title}</h4>\r\n      <p><strong>Interested Jobs: </strong>{board.interestedjobs}</p>\r\n      <p><strong>Applied Jobs: </strong>{board.applied}</p>\r\n      <p>{formatDistanceToNow(new Date(board.createdAt), { addSuffix: true })}</p>\r\n      <span className=\"material-symbols-outlined\" onClick={handleClick}>delete</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nBoardDetails.propTypes = {\r\n  board: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default BoardDetails\r\n\r\n"],"mappings":";;AAAA;AACA,SAASA,gBAAgB,QAAQ,2BAA2B;AAC5D,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,cAAc,QAAQ,yBAAyB;AACxD;AACA,OAAOC,mBAAmB,MAAM,8BAA8B;;AAE9D;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAElC;EACC,MAAM;IAAEC;EAAS,CAAC,GAAGT,gBAAgB,CAAC,CAAC;EACvC,MAAM;IAAEU;EAAK,CAAC,GAAGR,cAAc,CAAC,CAAC;EAEjC,MAAMS,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI,CAACD,IAAI,EAAE;MACZ;IACF;IAEA,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,mBAAmB,GAAGN,KAAK,CAACO,GAAG,EAAE;MAC5DC,MAAM,EAAE,QAAQ;MACfC,OAAO,EAAE;QACR,eAAe,EAAG,UAASN,IAAI,CAACO,KAAM;MACxC;IACF,CAAC,CAAC;IACF,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACM,IAAI,CAAC,CAAC;IAElC,IAAIN,QAAQ,CAACO,EAAE,EAAE;MAEfV,QAAQ,CAAC;QAACW,IAAI,EAAE,cAAc;QAAEC,OAAO,EAAEH;MAAI,CAAC,CAAC;IACjD;EACF,CAAC;;EAGD;EACA;IAAA;IACE;IAEAb,OAAA;MAAKiB,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9BlB,OAAA;QAAAkB,QAAA,GAAI,kBAAgB,EAAChB,KAAK,CAACiB,KAAK;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACtCvB,OAAA;QAAAkB,QAAA,gBAAGlB,OAAA;UAAAkB,QAAA,EAAQ;QAAiB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAACrB,KAAK,CAACsB,cAAc;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC/DvB,OAAA;QAAAkB,QAAA,gBAAGlB,OAAA;UAAAkB,QAAA,EAAQ;QAAc;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAACrB,KAAK,CAACuB,OAAO;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrDvB,OAAA;QAAAkB,QAAA,EAAIpB,mBAAmB,CAAC,IAAI4B,IAAI,CAACxB,KAAK,CAACyB,SAAS,CAAC,EAAE;UAAEC,SAAS,EAAE;QAAK,CAAC;MAAC;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5EvB,OAAA;QAAMiB,SAAS,EAAC,2BAA2B;QAACY,OAAO,EAAEvB,WAAY;QAAAY,QAAA,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5E;EAAC;AAEV,CAAC;AAAApB,EAAA,CAtCKF,YAAY;EAAA,QAGMN,gBAAgB,EACpBE,cAAc;AAAA;AAAAiC,EAAA,GAJ5B7B,YAAY;AAwClBA,YAAY,CAAC8B,SAAS,GAAG;EACvB7B,KAAK,EAAEN,SAAS,CAACoC,MAAM,CAACC;AAC1B,CAAC;AAED,eAAehC,YAAY;AAAA,IAAA6B,EAAA;AAAAI,YAAA,CAAAJ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}