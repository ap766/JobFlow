{"ast":null,"code":"var _jsxFileName = \"/home/anisha7/Documents/coding/webdev/projects/Jobflow/Frontendd/src/components/Column.jsx\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport Task from \"./Task\";\nimport \"./scroll.css\";\nimport { Droppable } from \"react-beautiful-dnd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddButton = styled.button`\n    position: absolute;\n    top: 8px; /* Adjust as needed */\n    right: 8px; /* Adjust as needed */\n    background-color: #fff;\n    border: none;\n    cursor: pointer;\n    font-size: 1rem;\n    padding: 5px;\n    border-radius: 500%;\n`;\n_c = AddButton;\nconst Container = styled.div`\n    background-color: #f4f5f7;\n    border-radius: 2.5px;\n    width: 400px;\n    height: 900px;\n    overflow-y: scroll;\n    -ms-overflow-style: none;\n    scrollbar-width: none;\n    border: 1px solid gray;\n`;\n_c2 = Container;\nconst Title = styled.h3`\n    padding: 8px;\n    background-color: pink;\n    text-align: center;\n`;\n_c3 = Title;\nconst TaskList = styled.div`\n    padding: 3px;\n    transistion: background-color 0.2s ease;\n    background-color: #f4f5f7;\n    flex-grow: 1;\n    min-height: 100px;\n`;\n_c4 = TaskList;\nexport default function Column({\n  title,\n  tasks,\n  id\n}) {\n  const handleAddButtonClick = () => {\n    // Add your logic here for what should happen when the \"+\" button is clicked\n    //I want a new entry to be added to database\n\n    console.log(\"Add button clicked!\");\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"column\",\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      style: {\n        backgroundColor: \"lightblue\",\n        position: \"sticky\",\n        top: \"0\"\n      },\n      children: [title, /*#__PURE__*/_jsxDEV(AddButton, {\n        onClick: handleAddButtonClick,\n        children: \" + \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n      droppableId: id,\n      children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(TaskList, {\n        ref: provided.innerRef,\n        ...provided.droppableProps,\n        isDraggingOver: snapshot.isDraggingOver,\n        children: [tasks.map((task, index) => /*#__PURE__*/_jsxDEV(Task, {\n          index: index,\n          task: task\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 29\n        }, this)), provided.placeholder]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n_c5 = Column;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"AddButton\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"Title\");\n$RefreshReg$(_c4, \"TaskList\");\n$RefreshReg$(_c5, \"Column\");","map":{"version":3,"names":["React","styled","Task","Droppable","jsxDEV","_jsxDEV","AddButton","button","_c","Container","div","_c2","Title","h3","_c3","TaskList","_c4","Column","title","tasks","id","handleAddButtonClick","console","log","className","children","style","backgroundColor","position","top","onClick","fileName","_jsxFileName","lineNumber","columnNumber","droppableId","provided","snapshot","ref","innerRef","droppableProps","isDraggingOver","map","task","index","placeholder","_c5","$RefreshReg$"],"sources":["/home/anisha7/Documents/coding/webdev/projects/Jobflow/Frontendd/src/components/Column.jsx"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport Task from \"./Task\";\nimport \"./scroll.css\";\nimport { Droppable } from \"react-beautiful-dnd\";\n\nconst AddButton = styled.button`\n    position: absolute;\n    top: 8px; /* Adjust as needed */\n    right: 8px; /* Adjust as needed */\n    background-color: #fff;\n    border: none;\n    cursor: pointer;\n    font-size: 1rem;\n    padding: 5px;\n    border-radius: 500%;\n`;\n\n\nconst Container = styled.div`\n    background-color: #f4f5f7;\n    border-radius: 2.5px;\n    width: 400px;\n    height: 900px;\n    overflow-y: scroll;\n    -ms-overflow-style: none;\n    scrollbar-width: none;\n    border: 1px solid gray;\n`;\n\nconst Title = styled.h3`\n    padding: 8px;\n    background-color: pink;\n    text-align: center;\n`;\n\nconst TaskList = styled.div`\n    padding: 3px;\n    transistion: background-color 0.2s ease;\n    background-color: #f4f5f7;\n    flex-grow: 1;\n    min-height: 100px;\n`;\n\nexport default function Column({ title, tasks, id }) {\n    const handleAddButtonClick = () => {\n        // Add your logic here for what should happen when the \"+\" button is clicked\n        //I want a new entry to be added to database\n        \n        console.log(\"Add button clicked!\");\n    };\n\n    return (\n        <Container className=\"column\">\n            <Title\n                style={{\n                    backgroundColor: \"lightblue\",\n                    position: \"sticky\",\n                    top: \"0\",\n                }}\n            >\n                {title}\n                 {/* + Button */}\n                 <AddButton onClick={handleAddButtonClick}> + </AddButton>\n            </Title>\n            <Droppable droppableId={id}>\n                {(provided, snapshot) => (\n                    <TaskList\n                        ref={provided.innerRef}\n                        {...provided.droppableProps}\n                        isDraggingOver={snapshot.isDraggingOver}\n                    >\n                        {tasks.map((task, index) => (\n                            <Task key={index} index={index} task={task} />\n                        ))}\n                        {provided.placeholder}\n                    </TaskList>\n                )}\n            </Droppable>\n        </Container>\n    );\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAO,cAAc;AACrB,SAASC,SAAS,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,SAAS,GAAGL,MAAM,CAACM,MAAO;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAVIF,SAAS;AAaf,MAAMG,SAAS,GAAGR,MAAM,CAACS,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GATIF,SAAS;AAWf,MAAMG,KAAK,GAAGX,MAAM,CAACY,EAAG;AACxB;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAJIF,KAAK;AAMX,MAAMG,QAAQ,GAAGd,MAAM,CAACS,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA,CAAC;AAACM,GAAA,GANID,QAAQ;AAQd,eAAe,SAASE,MAAMA,CAAC;EAAEC,KAAK;EAAEC,KAAK;EAAEC;AAAG,CAAC,EAAE;EACjD,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;IAC/B;IACA;;IAEAC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;EACtC,CAAC;EAED,oBACIlB,OAAA,CAACI,SAAS;IAACe,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACzBpB,OAAA,CAACO,KAAK;MACFc,KAAK,EAAE;QACHC,eAAe,EAAE,WAAW;QAC5BC,QAAQ,EAAE,QAAQ;QAClBC,GAAG,EAAE;MACT,CAAE;MAAAJ,QAAA,GAEDP,KAAK,eAELb,OAAA,CAACC,SAAS;QAACwB,OAAO,EAAET,oBAAqB;QAAAI,QAAA,EAAC;MAAG;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvD,CAAC,eACR7B,OAAA,CAACF,SAAS;MAACgC,WAAW,EAAEf,EAAG;MAAAK,QAAA,EACtBA,CAACW,QAAQ,EAAEC,QAAQ,kBAChBhC,OAAA,CAACU,QAAQ;QACLuB,GAAG,EAAEF,QAAQ,CAACG,QAAS;QAAA,GACnBH,QAAQ,CAACI,cAAc;QAC3BC,cAAc,EAAEJ,QAAQ,CAACI,cAAe;QAAAhB,QAAA,GAEvCN,KAAK,CAACuB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACnBvC,OAAA,CAACH,IAAI;UAAa0C,KAAK,EAAEA,KAAM;UAACD,IAAI,EAAEA;QAAK,GAAhCC,KAAK;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA6B,CAChD,CAAC,EACDE,QAAQ,CAACS,WAAW;MAAA;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACf;IACb;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEpB;AAACY,GAAA,GArCuB7B,MAAM;AAAA,IAAAT,EAAA,EAAAG,GAAA,EAAAG,GAAA,EAAAE,GAAA,EAAA8B,GAAA;AAAAC,YAAA,CAAAvC,EAAA;AAAAuC,YAAA,CAAApC,GAAA;AAAAoC,YAAA,CAAAjC,GAAA;AAAAiC,YAAA,CAAA/B,GAAA;AAAA+B,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}