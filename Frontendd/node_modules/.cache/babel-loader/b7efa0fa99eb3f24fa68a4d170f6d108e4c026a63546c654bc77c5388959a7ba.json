{"ast":null,"code":"var _jsxFileName = \"/home/anisha7/Documents/coding/webdev/projects/Jobflow/Frontendd/src/components/Kanban.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Column from './Column';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Kanban = () => {\n  _s();\n  const [Completed, setCompleted] = useState([]);\n  const [Incomplete, setIncomplete] = useState([]);\n  const [backlog, setBacklog] = useState([]);\n  const [inReview, setInReview] = useState([]);\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/todos\").then(response => response.json()).then(json => {\n      setCompleted(json.filter(task => task.completed));\n      setIncomplete(json.filter(task => !task.completed));\n    });\n  }, []);\n  const handleDragEnd = result => {\n    const {\n      destination,\n      source,\n      draggableId\n    } = result;\n    if (!destination || source.droppableId === destination.droppableId) return;\n    deletePreviousState(source.droppableId, draggableId);\n    const task = findItemById(draggableId, [...incomplete, ...completed, ...inReview, ...backlog]);\n    setNewState(destination.droppableId, task);\n  };\n  function deletePreviousState(sourceDroppableId, taskId) {\n    switch (sourceDroppableId) {\n      case \"1\":\n        setIncomplete(removeItemById(taskId, incomplete));\n        break;\n      case \"2\":\n        setCompleted(removeItemById(taskId, completed));\n        break;\n      case \"3\":\n        setInReview(removeItemById(taskId, inReview));\n        break;\n      case \"4\":\n        setBacklog(removeItemById(taskId, backlog));\n        break;\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"PROGRESS BOARD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        flexDirection: \"row\",\n        width: \"1300px\",\n        margin: \"0 auto\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Column, {\n        title: \"TO DO\",\n        tasks: InComplete,\n        id: \"1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 2\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 1\n  }, this);\n};\n_s(Kanban, \"bHT56o+sbvnYQ/zGGUu88Oa6QNk=\");\n_c = Kanban;\nexport default Kanban;\nvar _c;\n$RefreshReg$(_c, \"Kanban\");","map":{"version":3,"names":["React","useState","Column","DragDropContext","jsxDEV","_jsxDEV","Kanban","_s","Completed","setCompleted","Incomplete","setIncomplete","backlog","setBacklog","inReview","setInReview","useEffect","fetch","then","response","json","filter","task","completed","handleDragEnd","result","destination","source","draggableId","droppableId","deletePreviousState","findItemById","incomplete","setNewState","sourceDroppableId","taskId","removeItemById","children","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","alignItems","flexDirection","width","margin","title","tasks","InComplete","id","_c","$RefreshReg$"],"sources":["/home/anisha7/Documents/coding/webdev/projects/Jobflow/Frontendd/src/components/Kanban.jsx"],"sourcesContent":["\nimport React, { useState } from 'react';\nimport Column from './Column';\nimport {DragDropContext} from 'react-beautiful-dnd'\nconst Kanban = () => {\n\n\n  const [Completed,setCompleted]=useState([])\n  const [Incomplete,setIncomplete]=useState([])\n  const [backlog, setBacklog] = useState([]);\n  const [inReview, setInReview] = useState([]);\n\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/todos\")\n        .then((response) => response.json())\n        .then((json) => {\n            setCompleted(json.filter((task) => task.completed));\n            setIncomplete(json.filter((task) => !task.completed));\n        });\n}, []);\n\nconst handleDragEnd = (result) => {\n  const { destination, source, draggableId } = result;\n\n  if (!destination || source.droppableId === destination.droppableId) return;\n\n  deletePreviousState(source.droppableId, draggableId);\n\n  const task = findItemById(draggableId, [...incomplete, ...completed, ...inReview, ...backlog]);\n\n  setNewState(destination.droppableId, task);\n\n};\n\nfunction deletePreviousState(sourceDroppableId, taskId) {\n  switch (sourceDroppableId) {\n      case \"1\":\n          setIncomplete(removeItemById(taskId, incomplete));\n          break;\n      case \"2\":\n          setCompleted(removeItemById(taskId, completed));\n          break;\n      case \"3\":\n          setInReview(removeItemById(taskId, inReview));\n          break;\n      case \"4\":\n          setBacklog(removeItemById(taskId, backlog));\n          break;\n  }\n\n}\n\n  return (\n    \n<DragDropContext>\n\n<h2 style={{ textAlign: \"center\" }}>PROGRESS BOARD</h2>\n\n <div  style={{\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                    alignItems: \"center\",\n                    flexDirection: \"row\",\n                    width: \"1300px\",\n                    margin: \"0 auto\"\n                }}\n >\n\n<Column title={\"TO DO\"} tasks={InComplete} id={\"1\"} />\n</div>\n\n</DragDropContext>\n\n\n  );\n}\n\nexport default Kanban"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}